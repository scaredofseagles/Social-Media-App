[{"/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/index.js":"1","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/reportWebVitals.js":"2","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/App.js":"3","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/components/NavBar.js":"4","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/components/Footer.js":"5","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/components/NewText.js":"6","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/contexts/AuthContext.js":"7","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/views/Signup.js":"8","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/views/AllPosts.js":"9","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/views/Login.js":"10","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/views/UserProfile.js":"11","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/components/EmojiModal.js":"12","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/components/TextCard.js":"13","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/utils/API.js":"14","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/styles/index.js":"15","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/styles/Spinner.js":"16","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/views/TagSearch.js":"17"},{"size":525,"mtime":1610242074910,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1609812964948,"results":"20","hashOfConfig":"19"},{"size":1580,"mtime":1613858425814,"results":"21","hashOfConfig":"19"},{"size":2872,"mtime":1613858781171,"results":"22","hashOfConfig":"19"},{"size":403,"mtime":1613857184045,"results":"23","hashOfConfig":"19"},{"size":2817,"mtime":1613092596104,"results":"24","hashOfConfig":"19"},{"size":855,"mtime":1613092596109,"results":"25","hashOfConfig":"19"},{"size":5274,"mtime":1613527872567,"results":"26","hashOfConfig":"19"},{"size":853,"mtime":1613853496801,"results":"27","hashOfConfig":"19"},{"size":2510,"mtime":1613092596113,"results":"28","hashOfConfig":"19"},{"size":2598,"mtime":1613859862674,"results":"29","hashOfConfig":"19"},{"size":1662,"mtime":1613853628035,"results":"30","hashOfConfig":"19"},{"size":2822,"mtime":1613857653178,"results":"31","hashOfConfig":"19"},{"size":967,"mtime":1613859730854,"results":"32","hashOfConfig":"19"},{"size":49,"mtime":1613526740805,"results":"33","hashOfConfig":"19"},{"size":2318,"mtime":1613526650510,"results":"34","hashOfConfig":"19"},{"size":419,"mtime":1613856967162,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"zua1hk",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},"/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/index.js",[],["81","82"],"/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/reportWebVitals.js",[],"/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/App.js",["83"],"import { useState } from 'react'\nimport { Container } from 'react-bootstrap'\nimport NewText from './components/NewText'\nimport AllPosts from './views/AllPosts'\nimport Navbar from './components/NavBar'\nimport Footer from './components/Footer'\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport UserProfile from \"./views/UserProfile\"\nimport Login from './views/Login'\nimport Signup from './views/Signup'\nimport TagSearch from './views/TagSearch'\nimport { AuthProvider } from './contexts/AuthContext'\n\nfunction App() {\n  const [isSubmitted, setIsSubmitted] = useState(false)\n\n  return (\n    <>\n      {/* <AuthProvider> */}\n        <Navbar/>        \n          <Router>\n            <Switch>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/signup\">\n                <Signup />\n              </Route>\n              <Container className=\"mb-4\">\n                <Route path=\"/home\">\n                  <NewText updateData={() => setIsSubmitted(!isSubmitted) }/>\n                  <AllPosts isSubmitted={isSubmitted}/>\n                </Route>\n                <Route path=\"/users/:userid\">\n                  <UserProfile />\n                </Route>\n                <Route path=\"/admin\">\n                  \n                </Route>\n                <Route path=\"/tags\">\n                  <TagSearch />\n                </Route>\n              </Container>\n            </Switch>\n          </Router>       \n        <Footer/>\n      {/* </AuthProvider> */}\n      \n    </>\n    \n  );\n}\n\nexport default App;\n","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/components/NavBar.js",["84","85"],"import { useState, useEffect, useRef } from 'react'\nimport { Navbar } from \"react-bootstrap\";\nimport { GoTriangleDown } from 'react-icons/go'\nimport { Button, ClickAwayListener, Grow, Paper, Popper, MenuItem, MenuList, IconButton } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom'\n\nexport default function NavBar() {\n  const [user, setUser] = useState(null);\n  const [open, setOpen] = useState(false);\n\n  const anchorRef = useRef(null);\n\n  useEffect(() => {\n    checkUser()\n  }, [])\n\n  function handleClose() {\n    setOpen(false)\n  }\n\n  function checkUser() {\n    try {\n      let currentUser = JSON.parse(localStorage.getItem('currentUser'))\n      setUser(currentUser.screen_name)\n    } catch (error) {\n      if (window.location.pathname !== \"/login\" && window.location.pathname !== \"/signup\") {\n        window.location.replace(\"/login\")\n      }\n      \n    }  \n  }\n\n  return (\n    <Navbar className=\"yellow\">\n      <Navbar.Brand href=\"/home\">SUBTweets Inc</Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n      {user !== null ?\n        <Navbar.Text>\n          Signed in as: {user}<IconButton ref={anchorRef} onClick={() => setOpen(!open)}> <GoTriangleDown /></IconButton>\n        </Navbar.Text>\n          : <Navbar.Text>Not Signed In</Navbar.Text>}\n        <Menu open={open} handleClose={handleClose} anchorRef={anchorRef} user={user}/>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nfunction Menu(props) {\n\n  const handleClose = (event) => {\n    if (props.anchorRef.current && props.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    props.handleClose();\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      props.handleClose()\n    }\n  }\n\n  return (\n    <div>\n        \n        <Popper open={props.open} anchorEl={props.anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper className=\"yellow\">\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={props.open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                    <MenuItem onClick={() => window.location.replace(\"/users/\" + JSON.parse(localStorage.getItem('currentUser')).id)}>Profile</MenuItem>\n                    <MenuItem onClick={handleClose}>My account</MenuItem>\n                  <MenuItem onClick={() => { localStorage.clear('currentUser'); window.location.replace(\"/login\"); }}>Logout</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n    </div>\n  )\n}\n","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/components/Footer.js",[],"/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/components/NewText.js",["86","87","88","89","90","91","92","93"],"import { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { Divider } from '@material-ui/core'\nimport EmojiModal from './EmojiModal'\nimport PropTypes from 'prop-types';\nimport API from '../utils/API'\n\nEmojiModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n  };\n\nexport default function NewText(props){\n    const [open, setOpen] = useState(false);\n    const emails = ['username@gmail.com', 'user02@gmail.com'];\n    const [selectedValue, setSelectedValue] = useState(emails[1]);\n    const [textValue, setTextValue] = useState('')\n\n\n    function handleInputChange(event) {\n        const { value } = event.target;\n        console.log(\"i can what you're typing\", value)\n        \n        setTextValue(value)\n    }\n\n    async function handleFormSubmit(event) {\n        event.preventDefault();\n\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'))\n\n        let parsedtags = textValue.match(/(^|\\s)(#[a-z\\d-]+)/ig)\n\n        let trimmedtext = textValue.replace(/(^|\\s)(#[a-z\\d-]+)/ig, '')\n\n        const postData = {\n            user_id: currentUser.id,\n            tweet: trimmedtext,\n            tags: parsedtags\n        }\n        debugger\n        let result = await API.addPost(postData)\n        props.updateData()\n        setTextValue('')\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (value) => {\n        setOpen(false);\n        setSelectedValue(value);\n    };\n\n    return (\n        <>\n            <EmojiModal selectedValue={selectedValue} open={open} onClose={handleClose} />\n            <Form onSubmit={handleFormSubmit} className=\"mt-5\">\n                <Form.Group>\n                    <Form.Control onChange={handleInputChange} value={textValue} as=\"textarea\" rows={3} placeholder=\"How do you feel?\"/>\n                </Form.Group>\n                <IconBar handleClickOpen={handleClickOpen}/>\n                <Button type=\"submit\">Send Message</Button>\n            </Form>\n            <br/>\n            <Divider variant=\"middle\" />\n        </>\n    )\n}\n\nfunction IconBar(props){\n    return(\n        <>\n            <ul className=\"d-flex\" style={{ justifyContent: \"space-evenly\" }} sticky=\"bottom\">\n                {/* TODO: use icon buttons */}\n                <a><i className=\"fas fa-italic\"></i></a>\n                <a><i className=\"fas fa-underline\"></i></a>\n                <a><i className=\"fas fa-strikethrough\"></i></a>\n                <a><i className=\"fas fa-bold\"></i></a>\n                <a><i className=\"fas fa-link\"></i></a>\n                <a><i className=\"fas fa-paperclip\"></i></a>\n                <a onClick={props.handleClickOpen} ><i className=\"fas fa-icons\"></i></a>\n            </ul>\n        </>\n    )\n}","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/contexts/AuthContext.js",["94","95"],"import { useContext, useState, useEffect, createContext } from 'react'\nimport API from '../utils/API'\n\nconst AuthContext = createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    async function signup(newUser) {\n\n        let result = await API.addUser(newUser)\n        debugger\n        setCurrentUser(newUser)\n        return result\n    }\n    \n    function login(screen_name) { }\n    \n    function logout(screen_name) { }\n    \n\n    useEffect(() => {\n\n    }, [])\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n}","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/views/Signup.js",["96"],"import { Card, Form, Button, Alert, Row, Col } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useEffect, useRef, useState } from 'react';\nimport API from '../utils/API'\nimport { useAuth } from '../contexts/AuthContext';\n\nconst SignupContainer = styled.div`\n    display: flex;\n    margin-right: 0px !important;\n    padding: 0px;\n    max-width: 1140px;\n    box-sizing: border-box;\n    background-color: #FFBC42;\n    min-height: 100vh;\n    align-items: center;\n    justify-content: center;\n    css-selector;\n`;\nconst Body = styled.body`\n    background-color: #FFBC42;\n    padding-bottom: 4em;\n`;\n\nconst ProfileImage = styled.img`\n    background-image: url(${props => props.image});\n    margin: 5px;\n    margin-right: 30px;\n    width: 200px;\n    height: 200px;\n    // /* object-fit: cover;\n    // object-position: center; */\n    background-position: top left;\n    background-size: cover;\n    float:left;\n`;\n\nexport default function Signup() {\n\n    const [showNext, setShowNext] = useState(false)\n    const [nameValue, setNameValue] = useState('')\n    const [profileValue, setProfileValue] = useState('')\n    const [loading, setLoading] = useState(false)   \n    const [error, setError] = useState('')\n\n    //const  signup  = useAuth()\n\n    const emailRef = useRef()\n\n    const history = useHistory()\n\n    useEffect(() => {\n        //getDefaultName()\n        console.log(emailRef.current.value)\n    }, [])\n\n    async function getDefaultName() {\n        let nameResult = await API.getScreenName()\n        let imageResult = await API.getProfile(nameResult.data.join('-'))\n        setNameValue(nameResult.data.join('-'))       \n        setProfileValue(imageResult.config.url)\n    }\n\n\n    async function handleFormSubmit(event) {\n        event.preventDefault();\n\n        const newUserData = {\n            screen_name: nameValue,\n            email: emailRef.current.value,\n            profile_image: profileValue\n        }\n\n        try {\n            setLoading(true)\n\n            let result = await API.addUser(newUserData)           \n            if (result.data.success) {\n                localStorage.setItem('currentUser', JSON.stringify(result.data.response))\n                history.push(\"/home\")\n            } else if (!result.data.success) {\n                setError(result.data.msg)\n            }\n\n        } catch (error) {\n            setError('Something went wrong. Please try again.')\n            console.error(error)\n        }\n        setLoading(false)\n    }\n\n    function handleEnter(event){\n        if (event.keyCode === 13) {\n            event.preventDefault(); \n            setShowNext(!showNext);\n        }\n    }\n\n    return (\n        <Body>\n            <SignupContainer>\n                <div className=\"w-100\" style={{maxWidth: \"600px\", margin: \"auto\"}}>\n                    <Card style={{padding: \"0px 10px\"}}>\n                        <Card.Body>\n                            <h2>Sign Up</h2>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            <Form onSubmit={handleFormSubmit} onKeyPress={(event) => handleEnter(event)}>\n                                <Form.Group as={Row}>\n                                    \n                                    <Form.Control ref={emailRef} placeholder=\"Enter your email here\" type=\"email\" required/>\n                                    <Button onClick={() => setShowNext(!showNext)} disabled={emailRef.current?.value} style={{marginTop: \"2%\", float: \"right\"}} type=\"button\">Continue</Button>\n                                </Form.Group>\n\n\n                                {showNext ? <>\n\n                                <Col sm={10}>\n                                    <Form.Group>                                    \n                                        <ProfileImage image={profileValue}/>                              \n                                    </Form.Group>\n                                </Col>\n                                <Col>\n                                    <Form.Group as={Row}>\n                                        <Form.Label>Screen Name</Form.Label>\n                                        <Form.Control value={nameValue} readOnly />\n                                        <Button onClick={getDefaultName} type=\"button\" style={{marginTop: \"2%\"}}>Generate</Button>\n                                    </Form.Group>\n                                \n                                </Col>\n                                \n                                <div style={{marginTop: \"5%\"}}>\n                                    <Button type=\"submit\" className=\"w-100\" disabled={loading}>Submit</Button>\n                                </div>\n                                 </>   \n                                : <></>}\n                                \n                            </Form>\n                        </Card.Body>\n                    \n                    </Card>\n                    <div className=\"w-100 text-center mt-2\">\n                        Already have an account? <Link to=\"/login\">Log In</Link>\n                    </div>\n                </div>\n                \n                \n            </SignupContainer>\n        </Body>\n        \n    )\n}","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/views/AllPosts.js",["97"],"import TextCard from \"../components/TextCard\";\nimport { useEffect, useState } from 'react'\nimport API from '../utils/API'\nimport { Spinner } from \"../styles\";\n\nexport default function AllPosts(props) {\n    const [postData, setPostData] = useState([])\n\n    useEffect(() => {\n        getAllPosts()\n    }, [props.isSubmitted])\n\n    async function getAllPosts() {\n        let result = await API.getPosts()\n        if (result.data.success) {\n            setPostData(result.data.response)\n        } else {\n            throw 'SOMETHING WENT WRONG';\n        }\n    }\n\n    return(\n        <main style={{ overflowY: 'auto' }}>\n            { postData.length >= 1 ? postData.map((post, idx) => {\n                return <TextCard data={ post } key={idx}/>\n            }) : <Spinner top={55} left={55} height=\"300px\" opacity={0}/>}\n            \n        </main>\n    )\n}","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/views/Login.js",[],"/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/views/UserProfile.js",["98","99"],"import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport API from '../utils/API';\n\nconst UserContainer = styled.section`\n    //display: flex;\n    border: 2px solid red;\n    margin: 30px 0px;\n    padding: 30px;\n    height: 100vh;\n`;\n\nconst ProfileImage = styled.img`\n    background-image: url(${props => props.image});\n    margin: 5px;\n    width: 300px;\n    height: 300px;\n    // /* object-fit: cover;\n    // object-position: center; */\n    background-position: top left;\n    background-size: cover;\n    float:left;\n`;\n\nconst Actionables = styled.aside`\n    //display: flex;\n    flex-direction: column wrap;\n    height: 100vh;\n    width: 350px;\n`;\n\nexport default function UserProfile() {\n    \n    const [key, setKey] = useState('home')\n    const [user, setUser] = useState({})\n\n    useEffect(()=>{\n        setUser(JSON.parse(localStorage.getItem('currentUser')))\n        getPosts()\n    }, [])\n\n    async function getPosts(){\n        let result = await API.getUserPosts(user.id);\n        debugger\n    }\n\n    return (\n        <>\n            <UserContainer>\n                <h2>Welcome, {user.screen_name}</h2>\n                <div style={{display: 'flex'}}>\n                    <Actionables>\n                        <ProfileImage image={user.profile_image} />\n                        <div>\n                            <h6>Some Stats (interations)</h6>\n                            <ul>\n                                <li>posts</li>\n                                <li>likes</li>\n                                <li>replies</li>\n                            </ul>\n                        </div>\n                        <Button>Edit Profile</Button>\n                        <Button>Settings</Button>                   \n                    </Actionables>\n                    <aside>\n                        <h1>hello</h1>\n                        <Tabs\n                            id=\"controlled-tab-example\"\n                            activeKey={key}\n                            onSelect={(k) => setKey(k)}\n                            >\n                            <Tab eventKey=\"home\" title=\"Posts\">\n                                \n                            </Tab>\n                            <Tab eventKey=\"profile\" title=\"Likes\">\n                                \n                            </Tab>\n                        </Tabs>\n                    </aside>\n                </div>\n                \n                \n        \n            </UserContainer>\n        </>\n    )\n}","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/components/EmojiModal.js",["100"],"import { useEffect, useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport { Divider } from \"@material-ui/core\";\nimport API from \"../utils/API\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\n\nexport default function EmojiModal(props) {\n  const [emoji, setEmoji] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { onClose, selectedValue, open } = props;\n\n  useEffect(() => {\n    getEmoji();\n  }, []);\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  async function getEmoji() {\n    let response = await API.getEmojis();\n    setEmoji(response.data);\n    setLoading(false);\n  }\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Add Emoji 😃 </DialogTitle>\n\n      <Divider variant=\"middle\" />\n\n      <GridList cellHeight={50} cols={4}>\n        {!loading ? (\n          emoji.map((icon, idx) => {\n            return (\n              <GridListTile cols={icon.cols || 1} key={idx}>\n                <GridListTileBar\n                  title={icon.character}\n                  onClick={() => console.log(`${icon.slug} has been clicked`)}\n                ></GridListTileBar>\n              </GridListTile>\n            );\n          })\n        ) : (\n          <p>I'll add a spinner here</p>\n        )}\n      </GridList>\n    </Dialog>\n  );\n}\n","/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/components/TextCard.js",[],"/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/utils/API.js",[],"/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/styles/index.js",[],"/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/styles/Spinner.js",[],["101","102"],"/Users/meh/Desktop/My_Projects/Social-Media-App/client/src/views/TagSearch.js",["103","104","105"],"import { useState, useEffect } from 'react';\nimport API from '../utils/API';\nimport queryString from 'query-string';\n\nexport default function TagSearch(){\n\n    useEffect(() => {\n        getTagsList();\n    }, [])\n\n    async function getTagsList(){\n        console.log('is this thinhg on???')\n        console.log(window.location.search)\n        //let result = await API.getTags();\n    }\n\n    return(\n        <></>\n    )\n}",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":12,"column":10,"nodeType":"112","messageId":"113","endLine":12,"endColumn":22},{"ruleId":"110","severity":1,"message":"114","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":16},{"ruleId":"110","severity":1,"message":"115","line":5,"column":10,"nodeType":"112","messageId":"113","endLine":5,"endColumn":20},{"ruleId":"110","severity":1,"message":"116","line":43,"column":13,"nodeType":"112","messageId":"113","endLine":43,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":78,"column":17,"nodeType":"119","endLine":78,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":79,"column":17,"nodeType":"119","endLine":79,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":80,"column":17,"nodeType":"119","endLine":80,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":81,"column":17,"nodeType":"119","endLine":81,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":82,"column":17,"nodeType":"119","endLine":82,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":83,"column":17,"nodeType":"119","endLine":83,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":84,"column":17,"nodeType":"119","endLine":84,"endColumn":53},{"ruleId":"110","severity":1,"message":"120","line":12,"column":12,"nodeType":"112","messageId":"113","endLine":12,"endColumn":19},{"ruleId":"110","severity":1,"message":"121","line":12,"column":21,"nodeType":"112","messageId":"113","endLine":12,"endColumn":31},{"ruleId":"110","severity":1,"message":"122","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":18,"column":13,"nodeType":"125","messageId":"126","endLine":18,"endColumn":42},{"ruleId":"127","severity":1,"message":"128","line":42,"column":8,"nodeType":"129","endLine":42,"endColumn":10,"suggestions":"130"},{"ruleId":"110","severity":1,"message":"116","line":45,"column":13,"nodeType":"112","messageId":"113","endLine":45,"endColumn":19},{"ruleId":"110","severity":1,"message":"131","line":24,"column":9,"nodeType":"112","messageId":"113","endLine":24,"endColumn":28},{"ruleId":"106","replacedBy":"132"},{"ruleId":"108","replacedBy":"133"},{"ruleId":"110","severity":1,"message":"134","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"110","severity":1,"message":"135","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":11},{"ruleId":"110","severity":1,"message":"136","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":19},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useHistory' is defined but never used.","'result' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useAuth' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'handleListItemClick' is assigned a value but never used.",["137"],["138"],"'useState' is defined but never used.","'API' is defined but never used.","'queryString' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [getPosts]",{"range":"142","text":"143"},[1013,1015],"[getPosts]"]