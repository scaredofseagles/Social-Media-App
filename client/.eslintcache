[{"C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\index.js":"1","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\App.js":"2","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\reportWebVitals.js":"3","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\components\\Footer.js":"4","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\views\\AllPosts.js":"5","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\components\\NavBar.js":"6","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\components\\NewText.js":"7","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\views\\UserProfile.js":"8","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\components\\EmojiModal.js":"9","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\components\\TextCard.js":"10","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\utils\\API.js":"11","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\views\\Login.js":"12","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\views\\Signup.js":"13","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\contexts\\AuthContext.js":"14"},{"size":542,"mtime":1611608646724,"results":"15","hashOfConfig":"16"},{"size":1474,"mtime":1613061143594,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1611608646725,"results":"18","hashOfConfig":"16"},{"size":395,"mtime":1612983605441,"results":"19","hashOfConfig":"16"},{"size":801,"mtime":1613075297309,"results":"20","hashOfConfig":"16"},{"size":2949,"mtime":1613077001426,"results":"21","hashOfConfig":"16"},{"size":2904,"mtime":1613076938323,"results":"22","hashOfConfig":"16"},{"size":2367,"mtime":1612973932751,"results":"23","hashOfConfig":"16"},{"size":1709,"mtime":1611608646722,"results":"24","hashOfConfig":"16"},{"size":2961,"mtime":1613068353366,"results":"25","hashOfConfig":"16"},{"size":807,"mtime":1613060008980,"results":"26","hashOfConfig":"16"},{"size":2584,"mtime":1613072538094,"results":"27","hashOfConfig":"16"},{"size":5239,"mtime":1613070347683,"results":"28","hashOfConfig":"16"},{"size":897,"mtime":1613060939877,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ao90kc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\index.js",[],["65","66"],"C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\App.js",["67"],"import { useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport NewText from './components/NewText'\r\nimport AllPosts from './views/AllPosts'\r\nimport Navbar from './components/NavBar'\r\nimport Footer from './components/Footer'\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport UserProfile from \"./views/UserProfile\"\r\nimport Login from './views/Login'\r\nimport Signup from './views/Signup'\r\nimport { AuthProvider } from './contexts/AuthContext'\r\n\r\nfunction App() {\r\n  const [isSubmitted, setIsSubmitted] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      {/* <AuthProvider> */}\r\n        <Navbar/>        \r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Container className=\"mb-4\">\r\n              <Route path=\"/home\">\r\n                <NewText updateData={() => setIsSubmitted(!isSubmitted) }/>\r\n                <AllPosts isSubmitted={isSubmitted}/>\r\n              </Route>\r\n              <Route path=\"/users/:userid\">\r\n                <UserProfile />\r\n              </Route>\r\n              <Route path=\"/admin\">\r\n                \r\n              </Route>\r\n              </Container>\r\n            </Switch>\r\n          </Router>       \r\n        <Footer/>\r\n      {/* </AuthProvider> */}\r\n      \r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\reportWebVitals.js",[],"C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\components\\Footer.js",["68"],"export default function Footer(){\r\n    return (\r\n        <footer className=\"yellow\" style={{paddingTop: \"5%\", paddingBottom: \"10%\"}}>\r\n\t\t\t<ul className=\"footer d-flex\" style={{justifyContent: \"space-evenly\"}}>\r\n\t\t\t\t<li>Copyright Â© <a href=\"https://daileykaze.ca\" target=\"_blank\">Dailey Kaze</a> | All Rights Reserved</li>\r\n\t\t\t\t<li>Made with ðŸ’› in Toronto</li>\r\n\t\t\t</ul>\r\n\t\t</footer>\r\n    )\r\n}","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\views\\AllPosts.js",["69"],"C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\components\\NavBar.js",["70"],"C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\components\\NewText.js",["71","72","73","74","75","76","77","78"],"C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\views\\UserProfile.js",[],"C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\components\\EmojiModal.js",["79"],"import { useEffect, useState } from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nimport { Divider } from \"@material-ui/core\";\r\nimport API from \"../utils/API\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\n\r\nexport default function EmojiModal(props) {\r\n  const [emoji, setEmoji] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  useEffect(() => {\r\n    getEmoji();\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  async function getEmoji() {\r\n    let response = await API.getEmojis();\r\n    setEmoji(response.data);\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Add Emoji ðŸ˜ƒ </DialogTitle>\r\n\r\n      <Divider variant=\"middle\" />\r\n\r\n      <GridList cellHeight={50} cols={4}>\r\n        {!loading ? (\r\n          emoji.map((icon) => {\r\n            return (\r\n              <GridListTile cols={icon.cols || 1}>\r\n                <GridListTileBar\r\n                  title={icon.character}\r\n                  onClick={() => console.log(`${icon.slug} has been clicked`)}\r\n                ></GridListTileBar>\r\n              </GridListTile>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>I'll add a spinner here</p>\r\n        )}\r\n      </GridList>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\components\\TextCard.js",["80"],"import { makeStyles } from '@material-ui/core/styles'\r\nimport moment from 'moment'\r\nimport momentDurationFormatSetup from 'moment-duration-format'\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Button,\r\n  Typography,\r\n  CardMedia,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)'\r\n    },\r\n    cover: {\r\n        width: 100,\r\n        marginRight: '0px'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n})\r\n\r\nexport default function TextCard(props){\r\n    const classes = useStyles()\r\n    const bull = <span className={classes.bullet}>.</span>\r\n\r\n    return(\r\n        <Card className={classes.root} variant=\"outlined\" style={{marginTop: \"20px\"}}>\r\n            <Grid container >\r\n                <Grid item xs={4}>\r\n                    <CardMedia \r\n                    component=\"img\"\r\n                    alt=\"avatar\"\r\n                    height=\"100\"\r\n                    className={classes.cover}\r\n                    image={props.data?.profile_image}\r\n                    />\r\n                </Grid>\r\n            \r\n                <Grid item xs={8}>\r\n                    <CardContent>\r\n                        <Typography className={classes.pos} color=\"textSecondary\" gutterBottom>\r\n                            {props.data?.screen_name} {bull} {moment.duration(props.data?.created_at, \"days\").format(\"d\") === \"0\" ? \"Today\" : moment.duration(props.data?.created_at, \"days\").format( \"d [days ago]\") }\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            { props.data?.tweet }\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography className={classes.title} color=\"textSecondary\">\r\n                            tags: \r\n                            {props.data.tags ?\r\n                                props.data?.tags.map(tag => {\r\n                                    return <>\r\n                                        <a href={`/?tags=${tag}`}> {tag},</a>\r\n                                    </>\r\n                                }) : \r\n                                \r\n                             <>    \r\n                            <a href=\"/?tags=#lorem\"> #lorem,</a>\r\n                            <a href=\"/?tags=#ipsum\"> #ipsum,</a>\r\n                            <a href=\"/?tags=#dolor\"> #dolor,</a>\r\n                            </>}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                \r\n                <CardActions>\r\n                    <Button size=\"small\">Reply</Button>\r\n                    <Button size=\"small\">Like</Button>\r\n                </CardActions>\r\n            </Grid>\r\n            \r\n        </Card>\r\n    )\r\n}","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\utils\\API.js",[],"C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\views\\Login.js",[],"C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\views\\Signup.js",["81"],"import { Card, Form, Button, Alert, Row, Col } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport API from '../utils/API'\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst SignupContainer = styled.div`\r\n    display: flex;\r\n    margin-right: 0px !important;\r\n    padding: 0px;\r\n    max-width: 1140px;\r\n    box-sizing: border-box;\r\n    background-color: #FFBC42;\r\n    min-height: 100vh;\r\n    align-items: center;\r\n    justify-content: center;\r\n    css-selector;\r\n`;\r\nconst Body = styled.body`\r\n    background-color: #FFBC42;\r\n    padding-bottom: 4em;\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n    background-image: url(${props => props.image});\r\n    margin: 5px;\r\n    margin-right: 30px;\r\n    width: 200px;\r\n    height: 200px;\r\n    // /* object-fit: cover;\r\n    // object-position: center; */\r\n    background-position: top left;\r\n    background-size: cover;\r\n    float:left;\r\n`;\r\n\r\nexport default function Signup() {\r\n\r\n    const [showNext, setShowNext] = useState(false)\r\n    const [nameValue, setNameValue] = useState('')\r\n    const [profileValue, setProfileValue] = useState('')\r\n    const [loading, setLoading] = useState(false)   \r\n    const [error, setError] = useState('')\r\n\r\n    //const  signup  = useAuth()\r\n\r\n    const emailRef = useRef()\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        //getDefaultName()\r\n        console.log(emailRef.current.value)\r\n    }, [])\r\n\r\n    async function getDefaultName() {\r\n        let nameResult = await API.getScreenName()\r\n        let imageResult = await API.getProfile(nameResult.data.join('-'))\r\n        setNameValue(nameResult.data.join('-'))       \r\n        setProfileValue(imageResult.config.url)\r\n    }\r\n\r\n\r\n    async function handleFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const newUserData = {\r\n            screen_name: nameValue,\r\n            email: emailRef.current.value,\r\n            profile_image: profileValue\r\n        }\r\n\r\n        try {\r\n            setLoading(true)\r\n\r\n            let result = await API.addUser(newUserData)           \r\n            //debugger\r\n            if (result.data.success) {\r\n                localStorage.setItem('currentUser', JSON.stringify(result.data.response))\r\n                history.push(\"/home\")\r\n            } else if (!result.data.success) {\r\n                setError(result.data.msg)\r\n            }\r\n\r\n        } catch (error) {\r\n            setError('Something went wrong. Please try again.')\r\n            console.error(error)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <Body>\r\n            <SignupContainer>\r\n                <div className=\"w-100\" style={{maxWidth: \"600px\", margin: \"auto\"}}>\r\n                    <Card style={{padding: \"0px 10px\"}}>\r\n                        <Card.Body>\r\n                            <h2>Sign Up</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleFormSubmit}>\r\n                                <Form.Group as={Row}>\r\n                                    \r\n                                    <Form.Control ref={emailRef} placeholder=\"Enter your email here\" type=\"email\" required/>\r\n                                    <Button onClick={() => setShowNext(!showNext)} disabled={emailRef.current?.value} style={{marginTop: \"2%\", float: \"right\"}} type=\"button\">Continue</Button>\r\n                                </Form.Group>\r\n\r\n\r\n                                {showNext ? <>\r\n\r\n                                <Col sm={10}>\r\n                                    <Form.Group>                                    \r\n                                        <ProfileImage image={profileValue}/>                              \r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group as={Row}>\r\n                                        <Form.Label>Screen Name</Form.Label>\r\n                                        <Form.Control value={nameValue} readOnly />\r\n                                        <Button onClick={getDefaultName} type=\"button\" style={{marginTop: \"2%\"}}>Generate</Button>\r\n                                    </Form.Group>\r\n                                \r\n                                </Col>\r\n                                \r\n                                <div style={{marginTop: \"5%\"}}>\r\n                                    <Button type=\"submit\" className=\"w-100\" disabled={loading}>Submit</Button>\r\n                                </div>\r\n                                 </>   \r\n                                : <></>}\r\n                                \r\n                            </Form>\r\n                        </Card.Body>\r\n                    \r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        Already have an account? <Link to=\"/login\">Log In</Link>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            </SignupContainer>\r\n        </Body>\r\n        \r\n    )\r\n}","C:\\Users\\dkaze\\Documents\\personal\\Social-Media-App\\client\\src\\contexts\\AuthContext.js",["82","83"],"import { useContext, useState, useEffect, createContext } from 'react'\r\nimport API from '../utils/API'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    async function signup(newUser) {\r\n\r\n        let result = await API.addUser(newUser)\r\n        debugger\r\n        setCurrentUser(newUser)\r\n        return result\r\n    }\r\n    \r\n    function login(screen_name) { }\r\n    \r\n    function logout(screen_name) { }\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":11,"column":10,"nodeType":"90","messageId":"91","endLine":11,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":5,"column":21,"nodeType":"94","endLine":5,"endColumn":69},{"ruleId":"95","severity":1,"message":"96","line":17,"column":13,"nodeType":"97","messageId":"98","endLine":17,"endColumn":42},{"ruleId":"88","severity":1,"message":"99","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":16},{"ruleId":"88","severity":1,"message":"100","line":43,"column":13,"nodeType":"90","messageId":"91","endLine":43,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":78,"column":17,"nodeType":"94","endLine":78,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":79,"column":17,"nodeType":"94","endLine":79,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":80,"column":17,"nodeType":"94","endLine":80,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":81,"column":17,"nodeType":"94","endLine":81,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":82,"column":17,"nodeType":"94","endLine":82,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":83,"column":17,"nodeType":"94","endLine":83,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":84,"column":17,"nodeType":"94","endLine":84,"endColumn":53},{"ruleId":"88","severity":1,"message":"103","line":24,"column":9,"nodeType":"90","messageId":"91","endLine":24,"endColumn":28},{"ruleId":"88","severity":1,"message":"104","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":33},{"ruleId":"88","severity":1,"message":"105","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":17},{"ruleId":"88","severity":1,"message":"106","line":12,"column":12,"nodeType":"90","messageId":"91","endLine":12,"endColumn":19},{"ruleId":"88","severity":1,"message":"107","line":12,"column":21,"nodeType":"90","messageId":"91","endLine":12,"endColumn":31},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'Button' is defined but never used.","'result' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'handleListItemClick' is assigned a value but never used.","'momentDurationFormatSetup' is defined but never used.","'useAuth' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]