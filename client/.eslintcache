[{"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/index.js":"1","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/App.js":"2","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/reportWebVitals.js":"3","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/views/UserProfile.js":"4","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/views/TagSearch.js":"5","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/components/NewText.js":"6","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/components/NavBar.js":"7","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/views/Login.js":"8","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/components/Footer.js":"9","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/views/AllPosts.js":"10","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/views/Signup.js":"11","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/contexts/AuthContext.js":"12","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/components/EmojiModal.js":"13","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/components/TextCard.js":"14","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/utils/API.js":"15","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/styles/index.js":"16","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/styles/Spinner.js":"17","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/utils/store.js":"18","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/utils/PrivateRoute.js":"19"},{"size":525,"mtime":1614829737499,"results":"20","hashOfConfig":"21"},{"size":1655,"mtime":1635909507947,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1614829737499,"results":"23","hashOfConfig":"21"},{"size":2598,"mtime":1614829737500,"results":"24","hashOfConfig":"21"},{"size":419,"mtime":1614829737500,"results":"25","hashOfConfig":"21"},{"size":2817,"mtime":1614829737499,"results":"26","hashOfConfig":"21"},{"size":3526,"mtime":1635787699253,"results":"27","hashOfConfig":"21"},{"size":2469,"mtime":1635908743506,"results":"28","hashOfConfig":"21"},{"size":403,"mtime":1614829737498,"results":"29","hashOfConfig":"21"},{"size":853,"mtime":1614830701397,"results":"30","hashOfConfig":"21"},{"size":4657,"mtime":1635909038198,"results":"31","hashOfConfig":"21"},{"size":855,"mtime":1614829737499,"results":"32","hashOfConfig":"21"},{"size":1662,"mtime":1614829737498,"results":"33","hashOfConfig":"21"},{"size":2822,"mtime":1614829737499,"results":"34","hashOfConfig":"21"},{"size":1014,"mtime":1635908241800,"results":"35","hashOfConfig":"21"},{"size":49,"mtime":1614829737499,"results":"36","hashOfConfig":"21"},{"size":2318,"mtime":1614829737499,"results":"37","hashOfConfig":"21"},{"size":171,"mtime":1635906220406,"results":"38","hashOfConfig":"21"},{"size":458,"mtime":1635909376840,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"rs6n8a",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/index.js",[],["86","87"],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/App.js",["88"],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/reportWebVitals.js",[],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/views/UserProfile.js",["89","90"],"import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport API from '../utils/API';\n\nconst UserContainer = styled.section`\n    //display: flex;\n    border: 2px solid red;\n    margin: 30px 0px;\n    padding: 30px;\n    height: 100vh;\n`;\n\nconst ProfileImage = styled.img`\n    background-image: url(${props => props.image});\n    margin: 5px;\n    width: 300px;\n    height: 300px;\n    // /* object-fit: cover;\n    // object-position: center; */\n    background-position: top left;\n    background-size: cover;\n    float:left;\n`;\n\nconst Actionables = styled.aside`\n    //display: flex;\n    flex-direction: column wrap;\n    height: 100vh;\n    width: 350px;\n`;\n\nexport default function UserProfile() {\n    \n    const [key, setKey] = useState('home')\n    const [user, setUser] = useState({})\n\n    useEffect(()=>{\n        setUser(JSON.parse(localStorage.getItem('currentUser')))\n        getPosts()\n    }, [])\n\n    async function getPosts(){\n        let result = await API.getUserPosts(user.id);\n        debugger\n    }\n\n    return (\n        <>\n            <UserContainer>\n                <h2>Welcome, {user.screen_name}</h2>\n                <div style={{display: 'flex'}}>\n                    <Actionables>\n                        <ProfileImage image={user.profile_image} />\n                        <div>\n                            <h6>Some Stats (interations)</h6>\n                            <ul>\n                                <li>posts</li>\n                                <li>likes</li>\n                                <li>replies</li>\n                            </ul>\n                        </div>\n                        <Button>Edit Profile</Button>\n                        <Button>Settings</Button>                   \n                    </Actionables>\n                    <aside>\n                        <h1>hello</h1>\n                        <Tabs\n                            id=\"controlled-tab-example\"\n                            activeKey={key}\n                            onSelect={(k) => setKey(k)}\n                            >\n                            <Tab eventKey=\"home\" title=\"Posts\">\n                                \n                            </Tab>\n                            <Tab eventKey=\"profile\" title=\"Likes\">\n                                \n                            </Tab>\n                        </Tabs>\n                    </aside>\n                </div>\n                \n                \n        \n            </UserContainer>\n        </>\n    )\n}","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/views/TagSearch.js",["91","92","93"],"import { useState, useEffect } from 'react';\nimport API from '../utils/API';\nimport queryString from 'query-string';\n\nexport default function TagSearch(){\n\n    useEffect(() => {\n        getTagsList();\n    }, [])\n\n    async function getTagsList(){\n        console.log('is this thinhg on???')\n        console.log(window.location.search)\n        //let result = await API.getTags();\n    }\n\n    return(\n        <></>\n    )\n}","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/components/NewText.js",["94","95","96","97","98","99","100","101"],"import { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { Divider } from '@material-ui/core'\nimport EmojiModal from './EmojiModal'\nimport PropTypes from 'prop-types';\nimport API from '../utils/API'\n\nEmojiModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n  };\n\nexport default function NewText(props){\n    const [open, setOpen] = useState(false);\n    const emails = ['username@gmail.com', 'user02@gmail.com'];\n    const [selectedValue, setSelectedValue] = useState(emails[1]);\n    const [textValue, setTextValue] = useState('')\n\n\n    function handleInputChange(event) {\n        const { value } = event.target;\n        console.log(\"i can what you're typing\", value)\n        \n        setTextValue(value)\n    }\n\n    async function handleFormSubmit(event) {\n        event.preventDefault();\n\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'))\n\n        let parsedtags = textValue.match(/(^|\\s)(#[a-z\\d-]+)/ig)\n\n        let trimmedtext = textValue.replace(/(^|\\s)(#[a-z\\d-]+)/ig, '')\n\n        const postData = {\n            user_id: currentUser.id,\n            tweet: trimmedtext,\n            tags: parsedtags\n        }\n        debugger\n        let result = await API.addPost(postData)\n        props.updateData()\n        setTextValue('')\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (value) => {\n        setOpen(false);\n        setSelectedValue(value);\n    };\n\n    return (\n        <>\n            <EmojiModal selectedValue={selectedValue} open={open} onClose={handleClose} />\n            <Form onSubmit={handleFormSubmit} className=\"mt-5\">\n                <Form.Group>\n                    <Form.Control onChange={handleInputChange} value={textValue} as=\"textarea\" rows={3} placeholder=\"How do you feel?\"/>\n                </Form.Group>\n                <IconBar handleClickOpen={handleClickOpen}/>\n                <Button type=\"submit\">Send Message</Button>\n            </Form>\n            <br/>\n            <Divider variant=\"middle\" />\n        </>\n    )\n}\n\nfunction IconBar(props){\n    return(\n        <>\n            <ul className=\"d-flex\" style={{ justifyContent: \"space-evenly\" }} sticky=\"bottom\">\n                {/* TODO: use icon buttons */}\n                <a><i className=\"fas fa-italic\"></i></a>\n                <a><i className=\"fas fa-underline\"></i></a>\n                <a><i className=\"fas fa-strikethrough\"></i></a>\n                <a><i className=\"fas fa-bold\"></i></a>\n                <a><i className=\"fas fa-link\"></i></a>\n                <a><i className=\"fas fa-paperclip\"></i></a>\n                <a onClick={props.handleClickOpen} ><i className=\"fas fa-icons\"></i></a>\n            </ul>\n        </>\n    )\n}","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/components/NavBar.js",["102","103"],"import { useState, useEffect, useRef } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { GoTriangleDown } from \"react-icons/go\";\nimport {\n  Button,\n  ClickAwayListener,\n  Grow,\n  Paper,\n  Popper,\n  MenuItem,\n  MenuList,\n  IconButton\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function NavBar() {\n  const [user, setUser] = useState(null);\n  const [open, setOpen] = useState(false);\n\n  const anchorRef = useRef(null);\n\n  useEffect(() => {\n    checkUser();\n  }, []);\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function checkUser() {\n    try {\n      let currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n      setUser(currentUser.screen_name);\n    } catch (error) {\n      if (\n        window.location.pathname !== \"/login\" &&\n        window.location.pathname !== \"/signup\"\n      ) {\n        window.location.replace(\"/login\");\n      }\n    }\n  }\n\n  return (\n    <Navbar className=\"yellow\">\n      <Navbar.Brand href=\"/home\">SUBTweets Inc</Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n        {user !== null ? (\n          <Navbar.Text>\n            Signed in as: {user}\n            <IconButton ref={anchorRef} onClick={() => setOpen(!open)}>\n              {\" \"}\n              <GoTriangleDown />\n            </IconButton>\n          </Navbar.Text>\n        ) : (\n          <Navbar.Text>Not Signed In</Navbar.Text>\n        )}\n        <Menu\n          open={open}\n          handleClose={handleClose}\n          anchorRef={anchorRef}\n          user={user}\n        />\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nfunction Menu(props) {\n  const handleClose = event => {\n    if (\n      props.anchorRef.current &&\n      props.anchorRef.current.contains(event.target)\n    ) {\n      return;\n    }\n\n    props.handleClose();\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      props.handleClose();\n    }\n  }\n\n  return (\n    <div>\n      <Popper\n        open={props.open}\n        anchorEl={props.anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\"\n            }}\n          >\n            <Paper className=\"yellow\">\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList\n                  autoFocusItem={props.open}\n                  id=\"menu-list-grow\"\n                  onKeyDown={handleListKeyDown}\n                >\n                  <MenuItem\n                    onClick={() =>\n                      window.location.replace(\n                        \"/users/\" +\n                          JSON.parse(localStorage.getItem(\"currentUser\")).id\n                      )\n                    }\n                  >\n                    Profile\n                  </MenuItem>\n                  <MenuItem onClick={handleClose}>My account</MenuItem>\n                  <MenuItem\n                    onClick={() => {\n                      localStorage.clear(\"currentUser\");\n                      window.location.replace(\"/login\");\n                    }}\n                  >\n                    Logout\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n}\n","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/views/Login.js",[],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/components/Footer.js",[],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/views/AllPosts.js",["104"],"import TextCard from \"../components/TextCard\";\nimport { useEffect, useState } from 'react'\nimport API from '../utils/API'\nimport { Spinner } from \"../styles\";\n\nexport default function AllPosts(props) {\n    const [postData, setPostData] = useState([])\n\n    useEffect(() => {\n        getAllPosts()\n    }, [props.isSubmitted])\n\n    async function getAllPosts() {\n        let result = await API.getPosts()\n        if (result.data.success) {\n            setPostData(result.data.response)\n        } else {\n            throw 'SOMETHING WENT WRONG';\n        }\n    }\n\n    return(\n        <main style={{ overflowY: 'auto' }}>\n            { postData.length >= 1 ? postData.map((post, idx) => {\n                return <TextCard data={ post } key={idx}/>\n            }) : <Spinner top={55} left={55} height=\"300px\" opacity={0}/>}\n            \n        </main>\n    )\n}","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/views/Signup.js",["105"],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/contexts/AuthContext.js",["106","107"],"import { useContext, useState, useEffect, createContext } from 'react'\nimport API from '../utils/API'\n\nconst AuthContext = createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    async function signup(newUser) {\n\n        let result = await API.addUser(newUser)\n        debugger\n        setCurrentUser(newUser)\n        return result\n    }\n    \n    function login(screen_name) { }\n    \n    function logout(screen_name) { }\n    \n\n    useEffect(() => {\n\n    }, [])\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n}","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/components/EmojiModal.js",["108"],"import { useEffect, useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport { Divider } from \"@material-ui/core\";\nimport API from \"../utils/API\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\n\nexport default function EmojiModal(props) {\n  const [emoji, setEmoji] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { onClose, selectedValue, open } = props;\n\n  useEffect(() => {\n    getEmoji();\n  }, []);\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  async function getEmoji() {\n    let response = await API.getEmojis();\n    setEmoji(response.data);\n    setLoading(false);\n  }\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Add Emoji 😃 </DialogTitle>\n\n      <Divider variant=\"middle\" />\n\n      <GridList cellHeight={50} cols={4}>\n        {!loading ? (\n          emoji.map((icon, idx) => {\n            return (\n              <GridListTile cols={icon.cols || 1} key={idx}>\n                <GridListTileBar\n                  title={icon.character}\n                  onClick={() => console.log(`${icon.slug} has been clicked`)}\n                ></GridListTileBar>\n              </GridListTile>\n            );\n          })\n        ) : (\n          <p>I'll add a spinner here</p>\n        )}\n      </GridList>\n    </Dialog>\n  );\n}\n","/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/components/TextCard.js",[],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/utils/API.js",[],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/styles/index.js",[],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/styles/Spinner.js",[],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/utils/store.js",[],"/Users/dkaze/Desktop/Projects/Social-Media-App/client/src/utils/PrivateRoute.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":12,"column":10,"nodeType":"115","messageId":"116","endLine":12,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":42,"column":8,"nodeType":"119","endLine":42,"endColumn":10,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"121","line":45,"column":13,"nodeType":"115","messageId":"116","endLine":45,"endColumn":19},{"ruleId":"113","severity":1,"message":"122","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},{"ruleId":"113","severity":1,"message":"123","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":11},{"ruleId":"113","severity":1,"message":"124","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":19},{"ruleId":"113","severity":1,"message":"121","line":43,"column":13,"nodeType":"115","messageId":"116","endLine":43,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":78,"column":17,"nodeType":"127","endLine":78,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":79,"column":17,"nodeType":"127","endLine":79,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":80,"column":17,"nodeType":"127","endLine":80,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":81,"column":17,"nodeType":"127","endLine":81,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":82,"column":17,"nodeType":"127","endLine":82,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":83,"column":17,"nodeType":"127","endLine":83,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":84,"column":17,"nodeType":"127","endLine":84,"endColumn":53},{"ruleId":"113","severity":1,"message":"128","line":5,"column":3,"nodeType":"115","messageId":"116","endLine":5,"endColumn":9},{"ruleId":"113","severity":1,"message":"129","line":14,"column":10,"nodeType":"115","messageId":"116","endLine":14,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":18,"column":13,"nodeType":"132","messageId":"133","endLine":18,"endColumn":42},{"ruleId":"113","severity":1,"message":"134","line":96,"column":12,"nodeType":"115","messageId":"116","endLine":96,"endColumn":23},{"ruleId":"113","severity":1,"message":"135","line":12,"column":12,"nodeType":"115","messageId":"116","endLine":12,"endColumn":19},{"ruleId":"113","severity":1,"message":"136","line":12,"column":21,"nodeType":"115","messageId":"116","endLine":12,"endColumn":31},{"ruleId":"113","severity":1,"message":"137","line":24,"column":9,"nodeType":"115","messageId":"116","endLine":24,"endColumn":28},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["140"],"'result' is assigned a value but never used.","'useState' is defined but never used.","'API' is defined but never used.","'queryString' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'useHistory' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'handleEnter' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'handleListItemClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [getPosts]",{"range":"143","text":"144"},[1013,1015],"[getPosts]"]